// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cinema {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  halls Hall[]
}

model Hall {
  id    Int    @id @default(autoincrement())
  name  String
  seats Int

  cinema    Cinema   @relation(fields: [cinemaId], references: [id], onDelete: Cascade)
  cinemaId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  hall      Hall     @relation(fields: [hallId], references: [id], onDelete: Cascade)
  hallId    Int
  movie     Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId   Int
  time      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tickets Ticket[]
}

model Movie {
  id        Int      @id @default(autoincrement())
  title     String
  duration  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
}

model Ticket {
  id        Int      @id @default(autoincrement())
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
  row       Int
  seat      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
